name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # GitHub Actions에서 코드 체크아웃
    - name: Checkout source
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # gradlew 실행 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # 빌드 실행
    - name: Build with Gradle
      run: ./gradlew clean build

    # === Travis의 before_deploy에 해당 ===
    - name: Zip artifact
      run: |
        zip -r freelec-springboot2-webservice *
        mkdir -p deploy
        mv freelec-springboot2-webservice.zip deploy/freelec-springboot2-webservice.zip

    # === Travis의 deploy에 해당 (S3 업로드) ===
    # AWS 자격 증명 세팅
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-northeast-2

    # S3 업로드 실행
    - name: Upload to S3
      run: aws s3 sync deploy s3://freelec-springboot-build-sogo --acl private